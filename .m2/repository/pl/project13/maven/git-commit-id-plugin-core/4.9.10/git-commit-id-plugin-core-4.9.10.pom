<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin-parent</artifactId>
        <version>4.9.10</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>pl.project13.maven</groupId>
    <artifactId>git-commit-id-plugin-core</artifactId>
    <name>Git Commit Id Plugin Core</name>
    <version>4.9.10</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.target>1.8</java.target>

        <jgit.version>5.12.0.202106070339-r</jgit.version>
        <junit.version>4.13.2</junit.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <!--
        We should include relocation information, but if we do
        maven fails with "Could not find artifact io.github.git-commit-id:git-commit-id-maven-plugin:jar:${version}".
        If we publish a release under the new coordinates, maven silent ignores the plugin settings
        when we happen to use the old coordinates in our config
        (https://github.com/git-commit-id/git-commit-id-maven-plugin/issues/571).

        As a result: The plugin is moving to a new location, but we can't encode it in the pom :-(

        <relocation>
            <groupId>io.github.git-commit-id</groupId>
        </relocation>
        -->
    </distributionManagement>

    <build>
        <plugins>
            <!-- Setting built-in java compiler properties -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.target}</source>
                    <target>${java.target}</target>
                    <compilerArgument>-Xlint:deprecation</compilerArgument>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- JGit -->
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>${jgit.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit.ssh.jsch</artifactId>
            <version>${jgit.version}</version>
        </dependency>
        <!-- Joda Time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.10</version>
        </dependency>
        <!-- plexus build -->
        <dependency>
            <groupId>org.sonatype.plexus</groupId>
            <artifactId>plexus-build-api</artifactId>
            <version>0.0.7</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <dependency>
            <groupId>nu.studer</groupId>
            <artifactId>java-ordered-properties</artifactId>
            <version>1.0.4</version>
        </dependency>
        <!-- json stuff -->
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.1.4</version>
        </dependency>

        <!-- Test stuff -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
